fluent one way: on current sync context
		sequential == true

Create flow from duplex channel
	.Do() (one way) -> CcrsFlowFluent
	.Do<TOutput>() (req resp)

Timeout duplex channel (stage)

Logger channel to insert into flows

Multiplex channel (generic duplex)
	with interleave constraints

Scatter/Gather (duplex)

Switch channel (generic duplex)	
	
Actor: Send/Receive
Actor: Reply
	
Flow tracing
	log a message on each stage transition
	
Config: Ccrspace with multiple dispatchers

Pub/sub: with filter

Named listeners and name resolution

======
Issues
======

When constructing flows from sequential stages the processing is not sequential
	e.g. split line into words | count num of chars in word | check for even num | output result
	splitting is a scatter op, but the following stages are seq
	nonetheless the results for each word may come in arbitrary order	
	
	is sth wrong with the seq processing strategy?
	or is CCR Post() on a channel running on a separate thread?
	
	***maybe the problem lies with the internal response handler
	used within flows? it´s defined as an Action without a sequentiality information.
	it would need to be created using the sequentiality info of the next stage.
	

===================
Done
===================
Simple listener
	-parallel or sequential processing
	-configuration thru ctor params or fluent interface

Ccrspace with default dispatcher and default dispQueue
	
Req/Resp

Exception handling

Pub/sub
	publishing is oneway msg processing (derive from oneway channel?)
	implement simplex ch. interface

Concat() for duplex channels
	accepts duplex or simplex channel as next stage
	
